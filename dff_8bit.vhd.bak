LIBRARY ieee;
USE ieee.std_logic_1164.ALL;

ENTITY dFF_8bit IS
    PORT(
        i_d         : IN  STD_LOGIC_VECTOR(7 downto 0);  -- 8-bit input data
        i_clock     : IN  STD_LOGIC;                      -- Clock input
        o_q         : OUT STD_LOGIC_VECTOR(7 downto 0);  -- 8-bit output data
        o_qBar      : OUT STD_LOGIC_VECTOR(7 downto 0)   -- 8-bit inverted output data
    );
END dFF_8bit;

ARCHITECTURE rtl OF dFF_8bit IS
    COMPONENT dFF
        PORT(
            i_d       : IN  STD_LOGIC;
            i_clock   : IN  STD_LOGIC;
            o_q       : OUT STD_LOGIC;
            o_qBar    : OUT STD_LOGIC
        );
    END COMPONENT;

    -- Internal signals for the outputs of the individual D flip-flops
    SIGNAL q_internal   : STD_LOGIC_VECTOR(7 downto 0);
    SIGNAL qBar_internal: STD_LOGIC_VECTOR(7 downto 0);

BEGIN
    -- Instantiate 8 D flip-flops for the 8-bit register
    gen_dff: FOR i IN 0 TO 7 GENERATE
        dff_inst: dFF
            PORT MAP (
                i_d       => i_d(i),         -- Connect each bit of input
                i_clock   => i_clock,        -- Connect clock
                o_q       => q_internal(i),  -- Connect output
                o_qBar    => qBar_internal(i) -- Connect inverted output
            );
    END GENERATE;

    -- Assign internal signals to outputs
    o_q <= q_internal;
    o_qBar <= qBar_internal;

END rtl;
